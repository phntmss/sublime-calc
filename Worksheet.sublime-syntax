%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - worksheet
  - calc
scope: source.worksheet
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.worksheet
      push: double_quoted_string


    # Answer lines contain the word 'Answer ' followed by = or : symbol
    - match: 'Ans(wer)?\s*[=:]'
      scope: punctuation.definition.comment.worksheet
      push: answer_line

    # Comments begin with a '//' and finish at the end of the line
    - match: '^\s*#+\s*[a-zA-Z0-9]+.*'
      scope: punctuation.definition.comment.worksheet
      push: line_comment_symbol

    # Comments begin with a '//' and finish at the end of the line
    - match: '//|#|;'
      scope: punctuation.definition.comment.worksheet
      push: line_comment

    # Answer lines contain the word 'Answer ' followed by = or : symbol
    - match: '='
      scope: punctuation.definition.worksheet

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(round|abs|complex|bin|oct|min|max|range|sum|float|ceil|copysign|fabs|factorial|floor|fmod|frexp|fsum|gcd|isclose|isfinite|isinf|isnan|ldexp|modf|trunc|exp|expm1|log|log1p|log2|log10|pow|pow|sqrt|acos|asin|atan|atan2|cos|hypot|sin|tan|degrees|radians|acosh|asinh|atanh|cosh|sinh|tanh|erf|erfc|gamma|lgamma|pi|e|ans|Ans|ANS)\b'
      scope: keyword.control.worksheet

    # Numbers
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.worksheet

  double_quoted_string:
    - meta_scope: string.quoted.double.worksheet
    - match: '\\.'
      scope: constant.character.escape.worksheet
    - match: '"'
      scope: punctuation.definition.string.end.worksheet
      pop: true

  line_comment_symbol:
    - meta_scope: entity.name.namespace
    - match: $
      pop: true

  line_comment:
    - meta_scope: comment.line.worksheet
    - match: $
      pop: true

  answer_line:
    - meta_scope: comment.answer.worksheet
    # - meta_scope: markup.underline.link
    - match: $
      pop: true