{
 "scope": "source.mathilda",
 "completions": [
  {"trigger": "abs\tReturn the absolute value of x", "contents": "abs(${1:x})"},
  {"trigger": "acos\tReturn the arc cosine of x, in radians", "contents": "acos(${1:x})"},
  {"trigger": "acosh\tReturn the inverse hyperbolic cosine of x", "contents": "acosh(${1:x})"},
  {"trigger": "ans\tReuse the answer from the previous line", "contents": "ans(${1:x})"},
  {"trigger": "asin\tReturn the arc sine of x, in radians", "contents": "asin(${1:x})"},
  {"trigger": "asinh\tReturn the inverse hyperbolic sine of x", "contents": "asinh(${1:x})"},
  {"trigger": "atan\tReturn the arc tangent of x, in radians", "contents": "atan(${1:x})"},
  {"trigger": "atan2\tReturn atan(y / x), in radians. The result is between -pi and pi", "contents": "atan2(${1:y}, ${1:x})"},
  {"trigger": "atanh\tReturn the inverse hyperbolic tangent of x", "contents": "atanh(${1:x})"},
  {"trigger": "bin\tReturn binary representation of decimal x", "contents": "bin(${1:x})"},
  {"trigger": "ceil\tReturn the ceiling of x, the smallest integer greater than or equal to x.", "contents": "ceil(${1:x})"},
  {"trigger": "complex\tCreates a compex number x + yi", "contents": "complex(${1:x}, ${2:y})"},
  {"trigger": "copysign\tReturn a float with the magnitude (absolute value) of x but the sign of y", "contents": "copysign(${1:x}, ${2:y})"},
  {"trigger": "cos\tReturn the cosine of x radians", "contents": "cos(${1:x})"},
  {"trigger": "cosh\tReturn the hyperbolic cosine of x", "contents": "cosh(${1:x})"},
  {"trigger": "degrees\tConvert angle x from radians to degrees", "contents": "degrees(${1:x})"},
  {"trigger": "e\tThe mathematical constant e = 2.718281…", "contents": "e(${1:x})"},
  {"trigger": "erf\tReturn the error function at x", "contents": "erf(${1:x})"},
  {"trigger": "erfc\tReturn the complementary error function at x", "contents": "erfc(${1:x})"},
  {"trigger": "exp\tReturn e raised to the power x", "contents": "exp(${1:x})"},
  {"trigger": "expm1\tReturn e raised to the power x, minus 1", "contents": "expm1(${1:x})"},
  {"trigger": "fabs\tReturn the absolute value of x", "contents": "fabs(${1:x})"},
  {"trigger": "factorial\tReturn x factorial as an integer", "contents": "factorial(${1:x})"},
  {"trigger": "float", "contents": "float(${1:x})"},
  {"trigger": "floor\tReturn the floor of x, the lxest integer less than or equal to x", "contents": "floor(${1:x})"},
  {"trigger": "fmod\tReturn fmod(x, y)", "contents": "fmod(${1:x}, ${1:y})"},
  {"trigger": "frexp\tReturn the mantissa and exponent of x as the pair (m, e)", "contents": "frexp(${1:x})"},
  {"trigger": "fsum\tReturn an accurate floating point sum of values in the iterable", "contents": "fsum(${1:x})"},
  {"trigger": "gamma\tReturn the Gamma function at x", "contents": "gamma(${1:x})"},
  {"trigger": "hex\tReturn hexadecimal representation of decimal x", "contents": "hex(${1:x})"},
  {"trigger": "hypot\tReturn the Euclidean norm, sqrt(x*x + y*y)", "contents": "hypot(${1:x}, ${1:y})"},
  {"trigger": "l\tldexp(x, i) return x * (2**i)", "contents": "ldexp(${1:x})"},
  {"trigger": "lgamma\tReturn the natural logarithm of the absolute value of the Gamma function at x", "contents": "lgamma(${1:x})"},
  {"trigger": "log\tWith one argument, return the natural logarithm of x", "contents": "log(${1:x}, ${2:base})"},
  {"trigger": "log10\tReturn the base-10 logarithm of x", "contents": "log10(${1:x})"},
  {"trigger": "log1p\tReturn the natural logarithm of 1+x (base e)", "contents": "log1p(${1:x})"},
  {"trigger": "log2\tReturn the base-2 logarithm of x", "contents": "log2(${1:x})"},
  {"trigger": "max\tReturn maximum value of a list of values", "contents": "max(${1:x}, ${2:...})"},
  {"trigger": "min\tReturn minimum value of a list of values", "contents": "min(${1:x}, ${2:...})"},
  {"trigger": "modf\tReturn the fractional and integer parts of x", "contents": "modf(${1:x})"},
  {"trigger": "oct\tReturn octal representation of decimal x", "contents": "oct(${1:x})"},
  {"trigger": "pi\tThe mathematical constant π = 3.141592…", "contents": "pi"},
  {"trigger": "pow\tReturn x raised to the power y", "contents": "pow(${1:x}, ${2:y})"},
  {"trigger": "radians\tConvert angle x from degrees to radians", "contents": "radians(${1:x})"},
  {"trigger": "range\tReturns range of integers", "contents": "range(${1:x})"},
  {"trigger": "round", "contents": "round(${1:x})"},
  {"trigger": "sin\tReturn the sine of x radians", "contents": "sin(${1:x})"},
  {"trigger": "sinh\tReturn the hyperbolic sine of x", "contents": "sinh(${1:x})"},
  {"trigger": "sqrt\tReturn the square root of x", "contents": "sqrt(${1:x})"},
  {"trigger": "sum\tReturns sum of array of numbers", "contents": "sum(${1:x}, ${2:...})"},
  {"trigger": "tan\tReturn the tangent of x radians", "contents": "tan(${1:x})"},
  {"trigger": "tanh\tReturn the hyperbolic tangent of x", "contents": "tanh(${1:x})"},
  {"trigger": "trunc\tReturn the Real value x truncated to an Integral (usually an integer)", "contents": "trunc(${1:x})"},
  {"trigger": "pwd\tpassword(N) return a random password of length N", "contents": "password(${1:length})"},
  {"trigger": "gibberish\tgibberish(N) return a random pronounceable password of length N", "contents": "gibberish(${1:length})"},
  {"trigger": "date\tReturns a date object", "contents": "date(${1:year}, ${2:month}, ${3:day})"},
  {"trigger": "day\tReturn a delta of x days", "contents": "${1:<days>} day"},
  {"trigger": "days\tReturn a delta of x days", "contents": "${1:<days>} days"},
  {"trigger": "month\tReturn a delta of x months", "contents": "${1:<months>} month"},
  {"trigger": "months\tReturn a delta of x months", "contents": "${1:<months>} months"},
  {"trigger": "week\tReturn a delta of x weeks", "contents": "${1:<weeks>} week"},
  {"trigger": "weeks\tReturn a delta of x weeks", "contents": "${1:<weeks>} weeks"},
  {"trigger": "year\tReturn a delta of x years", "contents": "${1:<years>} year"},
  {"trigger": "years\tReturn a delta of x years", "contents": "${1:<years>} years"},
  {"trigger": "min\tReturn a delta of x minutes", "contents": "${1:<minutes>} min"},
  {"trigger": "minute\tReturn a delta of x minutes", "contents": "${1:<minutes>} minute"},
  {"trigger": "minutes\tReturn a delta of x minutes", "contents": "${1:<minutes>} minutes"},
  {"trigger": "hour\tReturn a delta of x hours", "contents": "${1:<hours>} hour"},
  {"trigger": "hours\tReturn a delta of x hours", "contents": "${1:<hours>} hours"},
  {"trigger": "sec\tReturn a delta of x seconds", "contents": "${1:<seconds>} sec"},
  {"trigger": "second\tReturn a delta of x seconds", "contents": "${1:<seconds>} second"},
  {"trigger": "seconds\tReturn a delta of x seconds", "contents": "${1:<seconds>} seconds"},
  {"trigger": "today\tReturns a date object for today", "contents": "today"},
  {"trigger": "now\tReturns a datetime object for the current moment", "contents": "now"}
 ]
}